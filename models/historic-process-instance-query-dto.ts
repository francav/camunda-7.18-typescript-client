/* tslint:disable */
/* eslint-disable */
/**
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HistoricProcessInstanceQueryDtoSorting } from './historic-process-instance-query-dto-sorting';
import { VariableQueryParameterDto } from './variable-query-parameter-dto';
/**
 * A historic process instance query which defines a group of historic process instances
 * @export
 * @interface HistoricProcessInstanceQueryDto
 */
export interface HistoricProcessInstanceQueryDto {
    /**
     * Filter by process instance id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processInstanceId?: string | null;
    /**
     * Filter by process instance ids. Must be a JSON array of `Strings`.
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processInstanceIds?: Array<string> | null;
    /**
     * Filter by the process definition the instances run on.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionId?: string | null;
    /**
     * Filter by the key of the process definition the instances run on.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionKey?: string | null;
    /**
     * Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Must be a JSON array of `Strings`.
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionKeyIn?: Array<string> | null;
    /**
     * Filter by the name of the process definition the instances run on.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionName?: string | null;
    /**
     * Filter by process definition names that the parameter is a substring of.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionNameLike?: string | null;
    /**
     * Exclude instances that belong to a set of process definitions. Must be a JSON array of `Strings`.
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processDefinitionKeyNotIn?: Array<string> | null;
    /**
     * Filter by process instance business key.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processInstanceBusinessKey?: string | null;
    /**
     * Filter by a list of business keys. A process instance must have one of the given business keys. Must be a JSON array of `Strings`
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processInstanceBusinessKeyIn?: Array<string> | null;
    /**
     * Filter by process instance business key that the parameter is a substring of.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    processInstanceBusinessKeyLike?: string | null;
    /**
     * Restrict the query to all process instances that are top level process instances.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    rootProcessInstances?: boolean | null;
    /**
     * Only include finished process instances. This flag includes all process instances that are completed or terminated. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    finished?: boolean | null;
    /**
     * Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    unfinished?: boolean | null;
    /**
     * Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    withIncidents?: boolean | null;
    /**
     * Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    withRootIncidents?: boolean | null;
    /**
     * Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/incidents/#incident-types) for a list of incident types.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    incidentType?: string | null;
    /**
     * Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    incidentStatus?: HistoricProcessInstanceQueryDtoIncidentStatusEnum;
    /**
     * Filter by the incident message. Exact match.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    incidentMessage?: string | null;
    /**
     * Filter by the incident message that the parameter is a substring of.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    incidentMessageLike?: string | null;
    /**
     * Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    startedBefore?: Date | null;
    /**
     * Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    startedAfter?: Date | null;
    /**
     * Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    finishedBefore?: Date | null;
    /**
     * Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    finishedAfter?: Date | null;
    /**
     * Restrict to instances that executed an activity after the given date (inclusive). By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    executedActivityAfter?: Date | null;
    /**
     * Restrict to instances that executed an activity before the given date (inclusive). By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    executedActivityBefore?: Date | null;
    /**
     * Restrict to instances that executed an job after the given date (inclusive). By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    executedJobAfter?: Date | null;
    /**
     * Restrict to instances that executed an job before the given date (inclusive). By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.
     * @type {Date}
     * @memberof HistoricProcessInstanceQueryDto
     */
    executedJobBefore?: Date | null;
    /**
     * Only include process instances that were started by the given user.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    startedBy?: string | null;
    /**
     * Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    superProcessInstanceId?: string | null;
    /**
     * Restrict query to one process instance that has a sub process instance with the given id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    subProcessInstanceId?: string | null;
    /**
     * Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    superCaseInstanceId?: string | null;
    /**
     * Restrict query to one process instance that has a sub case instance with the given id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    subCaseInstanceId?: string | null;
    /**
     * Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id.
     * @type {string}
     * @memberof HistoricProcessInstanceQueryDto
     */
    caseInstanceId?: string | null;
    /**
     * Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Must be a JSON array of `Strings`
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    tenantIdIn?: Array<string> | null;
    /**
     * Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    withoutTenantId?: boolean | null;
    /**
     * Restrict to instances that executed an activity with one of given ids. Must be a JSON array of `Strings`
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    executedActivityIdIn?: Array<string> | null;
    /**
     * Restrict to instances that have an active activity with one of given ids. Must be a JSON array of `Strings`
     * @type {Array<string>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    activeActivityIdIn?: Array<string> | null;
    /**
     * Restrict to instances that are active.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    active?: boolean | null;
    /**
     * Restrict to instances that are suspended.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    suspended?: boolean | null;
    /**
     * Restrict to instances that are completed.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    completed?: boolean | null;
    /**
     * Restrict to instances that are externallyTerminated.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    externallyTerminated?: boolean | null;
    /**
     * Restrict to instances that are internallyTerminated.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    internallyTerminated?: boolean | null;
    /**
     * A JSON array to only include process instances that have/had variables with certain values. The array consists of objects with the three properties `name`, `operator` and `value`. `name` (`String`) is the variable name, `operator` (`String`) is the comparison operator to be used and `value` the variable value.  Value may be `String`, `Number` or `Boolean`.  Valid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`. 
     * @type {Array<VariableQueryParameterDto>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    variables?: Array<VariableQueryParameterDto> | null;
    /**
     * Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    variableNamesIgnoreCase?: boolean | null;
    /**
     * Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal.
     * @type {boolean}
     * @memberof HistoricProcessInstanceQueryDto
     */
    variableValuesIgnoreCase?: boolean | null;
    /**
     * A JSON array of nested historic process instance queries with OR semantics.  A process instance matches a nested query if it fulfills at least one of the query's predicates.  With multiple nested queries, a process instance must fulfill at least one predicate of each query ([Conjunctive Normal Form](https://en.wikipedia.org/wiki/Conjunctive_normal_form)).  All process instance query properties can be used except for: `sorting`  See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/process-engine-api/#or-queries) for more information about OR queries.
     * @type {Array<HistoricProcessInstanceQueryDto>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    orQueries?: Array<HistoricProcessInstanceQueryDto> | null;
    /**
     * Apply sorting of the result
     * @type {Array<HistoricProcessInstanceQueryDtoSorting>}
     * @memberof HistoricProcessInstanceQueryDto
     */
    sorting?: Array<HistoricProcessInstanceQueryDtoSorting> | null;
}

/**
    * @export
    * @enum {string}
    */
export enum HistoricProcessInstanceQueryDtoIncidentStatusEnum {
    Open = 'open',
    Resolved = 'resolved'
}

