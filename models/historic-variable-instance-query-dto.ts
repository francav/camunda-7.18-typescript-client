/* tslint:disable */
/* eslint-disable */
/**
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HistoricVariableInstanceQueryDtoSorting } from './historic-variable-instance-query-dto-sorting';
/**
 * A Historic Variable Instance instance query which defines a list of Historic Variable Instance instances
 * @export
 * @interface HistoricVariableInstanceQueryDto
 */
export interface HistoricVariableInstanceQueryDto {
    /**
     * Filter by variable name.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableName?: string | null;
    /**
     * Restrict to variables with a name like the parameter.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableNameLike?: string | null;
    /**
     * Filter by variable value. May be `String`, `Number` or `Boolean`.
     * @type {any}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableValue?: any;
    /**
     * Match the variable name provided in `variableName` and `variableNameLike` case- insensitively. If set to `true` **variableName** and **variablename** are treated as equal.
     * @type {boolean}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableNamesIgnoreCase?: boolean | null;
    /**
     * Match the variable value provided in `variableValue` case-insensitively. If set to `true` **variableValue** and **variablevalue** are treated as equal.
     * @type {boolean}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableValuesIgnoreCase?: boolean | null;
    /**
     * Only include historic variable instances which belong to one of the passed and comma- separated variable types. A list of all supported variable types can be found [here](https://docs.camunda.org/manual/7.18/user-guide/process-engine/variables/#supported-variable-values). **Note:** All non-primitive variables are associated with the type 'serializable'.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableTypeIn?: Array<string> | null;
    /**
     * Include variables that has already been deleted during the execution.
     * @type {boolean}
     * @memberof HistoricVariableInstanceQueryDto
     */
    includeDeleted?: boolean | null;
    /**
     * Filter by the process instance the variable belongs to.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    processInstanceId?: string | null;
    /**
     * Only include historic variable instances which belong to one of the passed  process instance ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    processInstanceIdIn?: Array<string> | null;
    /**
     * Filter by the process definition the variable belongs to.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    processDefinitionId?: string | null;
    /**
     * Filter by a key of the process definition the variable belongs to.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    processDefinitionKey?: string | null;
    /**
     * Only include historic variable instances which belong to one of the passed and  execution ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    executionIdIn?: Array<string> | null;
    /**
     * Filter by the case instance the variable belongs to.
     * @type {string}
     * @memberof HistoricVariableInstanceQueryDto
     */
    caseInstanceId?: string | null;
    /**
     * Only include historic variable instances which belong to one of the passed and  case execution ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    caseExecutionIdIn?: Array<string> | null;
    /**
     * Only include historic variable instances which belong to one of the passed and  case activity ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    caseActivityIdIn?: Array<string> | null;
    /**
     * Only include historic variable instances which belong to one of the passed and  task ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    taskIdIn?: Array<string> | null;
    /**
     * Only include historic variable instances which belong to one of the passed and  activity instance ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    activityInstanceIdIn?: Array<string> | null;
    /**
     * Only include historic variable instances which belong to one of the passed and comma- separated tenant ids.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    tenantIdIn?: Array<string> | null;
    /**
     * Only include historic variable instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior.
     * @type {boolean}
     * @memberof HistoricVariableInstanceQueryDto
     */
    withoutTenantId?: boolean | null;
    /**
     * Only include historic variable instances which belong to one of the passed  variable names.
     * @type {Array<string>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    variableNameIn?: Array<string> | null;
    /**
     * An array of criteria to sort the result by. Each element of the array is                      an object that specifies one ordering. The position in the array                      identifies the rank of an ordering, i.e., whether it is primary, secondary,                      etc. Sorting has no effect for `count` endpoints
     * @type {Array<HistoricVariableInstanceQueryDtoSorting>}
     * @memberof HistoricVariableInstanceQueryDto
     */
    sorting?: Array<HistoricVariableInstanceQueryDtoSorting> | null;
}
